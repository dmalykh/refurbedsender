// Code generated by mockery v2.12.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	sender "github.com/dmalykh/refurbedsender/sender"

	testing "testing"
)

// Gate is an autogenerated mock type for the Gate type
type Gate struct {
	mock.Mock
}

// Send provides a mock function with given fields: ctx, messages
func (_m *Gate) Send(ctx context.Context, messages sender.Message) error {
	ret := _m.Called(ctx, messages)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, sender.Message) error); ok {
		r0 = rf(ctx, messages)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewGate creates a new instance of Gate. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewGate(t testing.TB) *Gate {
	mock := &Gate{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
